name: build

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
  
env:
  ZIP_NAME: UE4-DDS-Tools
  GUI_VERSION: v0.2.2
  PYTHON_VERSION: 3.9.12

jobs:
  build:
    runs-on: windows-2022
    steps:
    
      - name: Check tag
        run: |
          if [[ ${{ github.ref }} == refs/tags/v* ]]; then
            TAG=$(echo ${{ github.ref }} | sed -e "s#refs/tags/##g")
          else
            TAG=$(echo ${{ github.sha }} | cut -c1-7)
          fi
          echo "TAG=$TAG" >> "$GITHUB_ENV"
        shell: bash
        
      - uses: actions/checkout@v3
      - run: git submodule update --init --recursive external/Texconv-Custom-DLL
      
      - name: Download embeddable python
        run: |
          mkdir -p release/python
          curl -OL https://www.python.org/ftp/python/${{env.PYTHON_VERSION}}/python-${{env.PYTHON_VERSION}}-embed-amd64.zip
          unzip -d python-${{env.PYTHON_VERSION}}-embed-amd64 python-${{env.PYTHON_VERSION}}-embed-amd64.zip
          cd python-${{env.PYTHON_VERSION}}-embed-amd64
          cp python.exe ../release/python
          cp python39.dll ../release/python
          cp python39.zip ../release/python
          cp libffi-7.dll ../release/python
          cp _ctypes.pyd ../release/python
          cp LICENSE.txt ../release/python
        shell: bash

      - name: build dll
        run: |
          external/Texconv-Custom-DLL/batch_files/build_wic_support.bat
          mkdir -p release/src/directx
          cp external/Texconv-Custom-DLL/texconv.dll release/src/directx

      - name: Copy files
        run: |
          cp -r src release
          cp docs/changelog.txt release
          cp docs/README.url release
          cp LICENSE release
          cp -r release release_gui
          cp bat/* release
        shell: bash

      - name: Download Simple Command Runner
        run: |
          curl -OL https://github.com/matyalatte/Simple-Command-Runner/releases/download/${{env.GUI_VERSION}}/SimpleCommandRunner-${{env.GUI_VERSION}}-${{ runner.os }}.zip
          unzip -d SimpleCommandRunner SimpleCommandRunner-${{env.GUI_VERSION}}-${{ runner.os }}.zip
          cp SimpleCommandRunner/SimpleCommandRunner.exe release_gui/GUI.exe
          cp gui_definition.json release_gui
        shell: bash

      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          directory: 'release'
          type: 'zip'
          filename: '${{ env.ZIP_NAME }}-${{ env.TAG }}-Batch.zip'
          exclusions: '*.git* .gitignore'

      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          directory: 'release_gui'
          type: 'zip'
          filename: '${{ env.ZIP_NAME }}-${{ env.TAG }}-GUI.zip'
          exclusions: '*.git* .gitignore'

      - name: Create Release Draft
        id: create-release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG }}
          name: ${{ env.TAG }}
          body: |
            Changelog
            - First Change
            - Second Change
          draft: true
          prerelease: false

      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ env.TAG }} release/${{ env.ZIP_NAME }}-${{ env.TAG }}-Batch.zip
          gh release upload ${{ env.TAG }} release_gui/${{ env.ZIP_NAME }}-${{ env.TAG }}-GUI.zip
